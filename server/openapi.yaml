openapi: 3.0.3
info:
  title: Binar Car Rental - OpenAPI 1.0
  description: |-
    This is the OpenAPI documentation for the Binar Car Rental Challenge 6.
  version: 1.0.11
servers:
  - url: http://localhost:8686/api/v1/
tags:
  - name: cars
    description: Everything about data cars
  - name: users
    description: Operations about user
paths:
  /cars/:
    get:
      tags:
        - cars
      summary: Get all cars
      responses:
        '200':
          description: Data cars ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  resp:
                    type: array
                    items:
                      type: object
        '204':
          description: Data car kosong
  /cars/{id}:
    get:
      tags:
        - cars
      summary: Get car by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Data mobil ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  car:
                    type: object
        '404':
          description: Data cars not found
  /cars/create:
    post:
      tags:
        - cars
      summary: Create a new car
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                harga:
                  type: number
                foto:
                  type: string
                  format: binary
      responses:
        '201':
          description: Data mobil baru berhasil dibuat
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  car:
                    type: object
        '400':
          description: Name and harga are required or No file uploaded
        '500':
          description: Data mobil baru gagal dibuat
  /cars/edit/{id}:
    put:
      tags:
        - cars
      summary: Edit a car by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                harga:
                  type: number
                foto:
                  type: string
                  format: binary
      responses:
        '200':
          description: Car updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  car:
                    type: object
        '404':
          description: Car not found
        '500':
          description: Failed to update car
  /cars/delete/{id}:
    delete:
      tags:
        - cars
      summary: Delete a car by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '202':
          description: Data cars berhasil dihapus
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '400':
          description: Data cars gagal dihapus
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
  /users/superAdmin/login:
    post:
      tags:
        - users
      summary: Super Admin login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  nama:
                    type: string
                  email:
                    type: string
                  token:
                    type: string
                  role:
                    type: string
                  createdAt:
                    type: string
                  updatedAt:
                    type: string
        '404':
          description: akun tidak ditemukan
        '401':
          description: Password salah!
  /users/admin/login:
    post:
      tags:
        - users
      summary: Admin login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  nama:
                    type: string
                  email:
                    type: string
                  token:
                    type: string
                  role:
                    type: string
                  createdAt:
                    type: string
                  updatedAt:
                    type: string
        '404':
          description: akun tidak ditemukan
        '401':
          description: Password salah!
  /users/currentUser:
    get:
      tags:
        - users
      summary: Get current user
      responses:
        '200':
          description: Get current user data
          content:
            application/json:
              schema:
                type: object
                properties:
                  userData:
                    type: object
  /users/member/login:
    post:
      tags:
        - users
      summary: Member login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  nama:
                    type: string
                  email:
                    type: string
                  token:
                    type: string
                  role:
                    type: string
                  createdAt:
                    type: string
                  updatedAt:
                    type: string
        '404':
          description: akun tidak ditemukan
        '401':
          description: Password salah!
  /users/member/register:
    post:
      tags:
        - users
      summary: Register member
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nama:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Admin user created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    type: object
        '500':
          description: Internal server error
  /users/superAdmin/createAdmin:
    post:
      tags:
        - users
      summary: Create admin by super admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nama:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Admin user created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    type: object
        '500':
          description: Internal server error
